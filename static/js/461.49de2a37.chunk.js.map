{"version":3,"file":"static/js/461.49de2a37.chunk.js","mappings":"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","sources":["additional/fetching/fetchMovies.js","additional/imageDB/imageDB.js","pages/styledPages/MovieCard.styled.jsx","component/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx","../node_modules/shortid/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js"],"sourcesContent":["export const KEY = \"3178cfb99d9cb37cb3fd903fa9e819f6\";\r\n\r\nexport const fetchRes = (KEY) => {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${KEY}`\r\n  ).then((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n\r\n    return Promise.rejected(new Error(\"not found\"));\r\n  });\r\n};\r\n\r\nexport const fetchMovie = (id, KEY) => {\r\n  return fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`).then(\r\n    (res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.rejected(new Error(\"not found\"));\r\n    }\r\n  );\r\n};\r\n\r\nexport const fetchMovieByName = (name, KEY) => {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${name}`\r\n  ).then((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.rejected(new Error(\"not found\"));\r\n  });\r\n};\r\n\r\nexport const fetchCast = (id, KEY) => {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}`\r\n  ).then((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.rejected(new Error(\"not found\"));\r\n  });\r\n};\r\n\r\nexport const fetchReviews = (id, KEY) => {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}`\r\n  ).then((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.rejected(new Error(\"not found\"));\r\n  });\r\n};\r\n","export const imageDB = \"https://image.tmdb.org/t/p/w500\";\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Image = styled.img`\r\nwidth: 300px;\r\n`\r\n\r\nexport const CardContainer = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\nmargin-top: 10px;\r\nborder-top: 2px solid black;\r\nborder-bottom: 2px solid black;\r\npadding-top: 10px;\r\npadding-bottom: 10px;\r\n`\r\n\r\nexport const Info = styled.div`\r\nwidth: 850px;\r\n`\r\n\r\nexport const Title = styled.p`\r\nfont-weight: bold;\r\n`\r\n\r\nexport const MainTitle = styled.p`\r\nfont-size: 24px;\r\nfont-weight: bold;\r\n`","import { Suspense } from \"react\";\r\nimport { Link, Outlet } from \"react-router-dom\";\r\nimport {TailSpin} from 'react-loader-spinner';\r\nimport shortid from \"shortid\";\r\nimport defaultImg from \"../../img/default.webp\";\r\nimport { Image, CardContainer, Info, Title, MainTitle } from \"../../pages/styledPages/MovieCard.styled\";\r\n\r\nconst MovieCard = ({URL, img, tag, title, average, overview, genres}) => {\r\n\r\n    return (\r\n        <div>\r\n            <CardContainer>\r\n                <Image src={img ? `${URL}/${img}` : defaultImg} alt={tag} />\r\n                <Info>\r\n                    <MainTitle>{title}</MainTitle>\r\n                    <p>User scores: {Math.round(average * 10)} %</p>\r\n                    <Title>Overview</Title>\r\n                    <p>{overview}</p>\r\n                    <Title>Genres</Title>\r\n                    <ul>\r\n                        {genres.map(({name}) => (<li key={shortid.generate()}>{name}</li>))}\r\n                    </ul>\r\n                </Info>\r\n            </CardContainer>\r\n            <p>Additional information</p>\r\n            <ul>\r\n                <Link to=\"cast\">Cast</Link>\r\n                <Link to=\"reviews\">Reviews</Link>\r\n            </ul>\r\n\r\n            <Suspense fallback={<TailSpin color=\"#00BFFF\" height={80} width={80} />}>\r\n                <Outlet/>\r\n            </Suspense>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieCard;","import { useParams, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { imageDB } from \"../additional/imageDB/imageDB\";\r\nimport {KEY, fetchMovie} from \"../additional/fetching/fetchMovies\";\r\nimport MovieCard from \"../component/MovieCard/MovieCard\";\r\n\r\nconst MovieDetails = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const {movieId} = useParams();\r\n    const [movie, setMovie] = useState(null);\r\n\r\n    const handleGoBack = () => {\r\n\r\n        if (location?.state?.from) {\r\n\r\n            return navigate(location.state.from);\r\n        }\r\n\r\n        return navigate('/');\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(movieId);\r\n        fetchMovie(movieId ,KEY)\r\n        .then(res => setMovie(res))\r\n    }, [movieId]);\r\n\r\n    return (\r\n        \r\n        <>\r\n            <button type=\"button\" onClick={handleGoBack}>go back</button>\r\n\r\n            {movie && (\r\n                <MovieCard \r\n                    URL={imageDB} \r\n                    img={movie.poster_path} \r\n                    tag={movie.tagline} \r\n                    title={movie.title}\r\n                    average={movie.vote_average}\r\n                    overview={movie.overview}\r\n                    genres={movie.genres}\r\n                    />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieDetails;","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n"],"names":["KEY","fetchRes","fetch","then","res","ok","json","Promise","rejected","Error","fetchMovie","id","fetchMovieByName","name","fetchCast","fetchReviews","imageDB","Image","styled","CardContainer","Info","Title","MainTitle","URL","img","tag","title","average","overview","genres","src","defaultImg","alt","Math","round","map","shortid","to","Suspense","fallback","color","height","width","navigate","useNavigate","location","useLocation","movieId","useParams","useState","movie","setMovie","useEffect","console","log","type","onClick","state","from","poster_path","tagline","vote_average","module","exports","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","length","unique","split","filter","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","floor","push","splice","shuffle","get","characters","seed","lookup","index","counter","previousSeconds","generate","clusterWorkerId","str","seconds","Date","now","random","format","number","done","loopCounter","pow","build","isValid","seedValue","worker","workerId","newCharacters","undefined","RegExp","replace","test","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","_seed_","mask","LN2","step"],"sourceRoot":""}